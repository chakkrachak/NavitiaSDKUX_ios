/* Navigation bar title for journey solutions screen */
"controller.JourneySolutionsController.title" = "Journeys";

/* No solution */
"controller.JourneySolutionsController.results.no_solution" = "No solution found";

/* With 16 min walking (712m) */
"component.JourneyWalkingSummaryComponent.With" = "With";

/* With 16 min walking (712m) */
"component.JourneyWalkingSummaryComponent.walking" = "walking";

/* Datetime represent label */
"component.DateTimeButtonComponent.representation.departure" = "Departure: ";
"component.DateTimeButtonComponent.representation.arrival" = "Arrival: ";

/* No journeys */
"screen.JourneySolutionsScreen.error" = "No journey found";

/* Navigation bar title for journey roadmap screen */
"controller.JourneySolutionRoadmapViewController.title" = "Roadmap";

/* Navigation bar title for journey roadmap section */
"component.JourneyRoadmapSectionPublicTransportDescriptionComponent.detailsHeaderTitle" = "Details";
"component.JourneyRoadmapSectionPublicTransportDescriptionComponent.stopsHeaderTitle" = "stops";

/* StreetNetwork distance label for walking */
"component.JourneyRoadmapSectionStreetNetworkDescriptionModeDistanceLabelComponent.mode.walking" = "A %@ walking";

/* StreetNetwork distance label for bike */
"component.JourneyRoadmapSectionStreetNetworkDescriptionModeDistanceLabelComponent.mode.bike" = "A %@ riding";

/* StreetNetwork distance label for car */
"component.JourneyRoadmapSectionStreetNetworkDescriptionModeDistanceLabelComponent.mode.car" = "A %@ driving";

/* StreetNetwork distance label for bss */
"component.JourneyRoadmapSectionStreetNetworkDescriptionModeDistanceLabelComponent.mode.bss" = "A %@ ride on a %@";

/* Journey roadmap transport action description */
"journey.roadmap.action.walk" = "walk";

/* Journey roadmap waiting description */
"journey.roadmap.action.wait" = "Wait";

/* PublicTransport description */
"component.JourneyRoadmapSectionPublicTransportComponent.DirectionComponent.take" = "Take the";
"component.JourneyRoadmapSectionPublicTransportComponent.DirectionComponent.at" = "at";
"component.JourneyRoadmapSectionPublicTransportComponent.DirectionComponent.direction" = "in the direction of";

/* PublicTransport disruption period */
"component.JourneyRoadmapSectionPublicTransportDescriptionDisruptionDescriptionComponentPeriod.from" = "From";
"component.JourneyRoadmapSectionPublicTransportDescriptionDisruptionDescriptionComponentPeriod.to" = "to";
"component.JourneyRoadmapSectionPublicTransportDescriptionDisruptionDescriptionComponentPeriod.to.fallback" = "until further notice";

/* Unit√©s */
"units.hour" = "hour";
"units.hour.plural" = "hours";
"units.hour.abbr" = "h";
"units.minute" = "minute";
"units.minute.plural" = "minutes";
"units.minute.abbr" = "min";
"units.hour.and.minute" = "%d hour and %d minute";
"units.hour.and.minute.plural" = "%d hour and %d minutes";
"units.hour.plural.and.minute" = "%d hours and %d minute";
"units.hour.plural.and.minute.plural" = "%d hours and %d minutes";
"units.meter" = "meter";
"units.meter.plural" = "meters";
"units.meter.abbr" = "m";
"units.kilometer" = "kilometer";
"units.kilometer.plural" = "kilometers";
"units.kilometer.abbr" = "km";
